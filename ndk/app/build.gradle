apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.example.administrator.ndk"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //Gradle 文件配置对CMake的配置
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        //Gradle 构建并打包某个特定abi体系架构下的.so库
        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
//            abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a',
//                    'arm64-v8a', 'mips', 'mips64'
            /**
             * Android studio升级到3.1.2
             * ndk（v17）已不在支持mips、armeabi等CPU架构
             只支持armeabi-v7a, arm64-v8a, x86, x86_64。

             解决办法一：
             剔除mips、armeabi等CPU架构
             添加armeabi-v7a, arm64-v8a, x86, x86_64
             理想很丰满，现实很骨感

             解决二(亲测顺利解决)：
             NDK降级到v16
             替换AS里NDK或者修改ndk-bundle路径即可

             */
            abiFilters 'x86', 'x86_64', 'armeabi-v7a',
                    'arm64-v8a'

        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //Gradle 文件配置对CMake的配置
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
